@using FirstTask.Resources;

@{
	ViewBag.Title = Resource.HeadingServicesHistory;
}
<div class="container">
	<h2>@Resource.HeadingServicesHistory</h2>

	<div id="scheduler"></div>

	<div id="reportWindow">
		<form id="reportForm"></form>
	</div>

	<div id="schedulerNotifications"></div>

	<div>
		<button id="reportWindowButton">@Resource.ButtonPrint</button>
	</div>
</div>
<script id="event-template" type="text/x-kendo-template">
	<div class="scheduler-box">
		<p><span>Услуга:</span> #:Service.Name#</p>
		<p><span>Компания:</span> #:Company.Name#</p>
		<p><span>Сотрудник:</span> #:Employee.FullName#</p>
	</div>
</script>

<script id="schedulerEditor" type="text/x-kendo-template">
	<form id="schedulerForm" class="submit-form">
		<div class="submit-form-fields">
			<input type="hidden" id="shedulerSubmitFormInputId"/>
			<div class="row">
				<div class="col-4">
					<label for="DateOfCreate">@Resource.LabelDateOfBegin</label>
				</div>
				<div class="col-7">
					<input type="text" name="DateOfCreate" id="shedulerSubmitFormInputDateOfCreate" name="DateOfCreate"/>
				</div>
			</div>
			<div class="row">
				<div class="col-4">
					<label for="Service">@Resource.LabelService</label>
				</div>
				<div class="col-7">
					<input type="text" name="Service" id="shedulerSubmitFormInputCompany" name="Service"/>
				</div>
			</div>
			<div class="row">
				<div class="col-4">
					<label for="Company">@Resource.LabelCompany</label>
				</div>
				<div class="col-7">
					<input type="text" name="Company" id="shedulerSubmitFormInputService" name="Company"/>
				</div>
			</div>
			<div class="row">
				<div class="col-4">
					<label for="Employee">@Resource.LabelEmployee</label>
				</div>
				<div class="col-7">
					<input type="text" name="Employee" id="shedulerSubmitFormInputEmployee" name="Employee"/>
				</div>
			</div>
		</div>
		<div class="button-block">
			<button type="submit" class="btn-primary">@Resource.ButtonSave</button>
			<button type="button" id="schedulerFormSubmitButtonCancel" class="btn-default">@Resource.ButtonCancellation</button>
		</div>
	</form>
</script>

<script type="text/javascript">

	$(document).ready(function () {

		var controls = {};

		$("#schedulerNotifications").kendoNotification();
		controls.Notification = $("#schedulerNotifications").data("kendoNotification")

		//REPORT
		$("#schedulerSubmitFormWarningWindow").kendoDialog({
			closable: false, visible: false, title: "@Resource.LabelDeleteAction", height: "500px"
		});

		$("#reportWindow").kendoDialog({
			modal: true,
			width: "500px",
			closable: false,
			visible: false,
			title: false,
		});
		controls.ReportDialog = $("#reportWindow").data("kendoDialog");

		$("body").on("click", "#reportWindowButton", function () {
			controls.ReportDialog.open();
		});

		$("body").on("click", "#reportCloseWindow", function () {
			controls.ReportDialog.close();
		});

		controls.ReportForm = $("#reportForm").kendoForm({
			visible: true,
			items: [
				{
					type: "group",
					label: "@Resource.ReportFormHeader",
					items: [
						{
							field: "CompanyId", label: "@Resource.LabelCompany",
							editor: function (container, options) {
								var input = $('<input id="reportCompanyId" name="CompanyId"/>');
								input.appendTo(container);
								input.kendoComboBox({
									placeholder: "@Resource.PlaceholderCompany",
									dataTextField: "Name",
									dataValueField: "Id",
									filter: "contains",
									dataSource: {
										serverFiltering: true,
										transport: {
											read: {
												url: "/Company/Index/",
												type: "POST",
												data: {
													CompanyName: null,
													Page: 1,
													PageSize: -1,
													Status: 0
												}
											}
										}
									},
									open: function (e) {
										let items = this.dataSource.view();
										let IsFirst = items.find(x => x.Id === -1) == undefined;

										if (IsFirst) {
											this.dataSource.add({ Name: "<- Выбрать все ->", Id: -1 });
											this.value(-1);
										}
									}
								});
							}
						},
						{
							field: "ServiceId", label: "@Resource.LabelService",
							editor: function (container, options) {
								var input = $('<input id="reportServiceId" name="ServiceId"/>');
								input.appendTo(container);
								input.kendoComboBox({
									placeholder: "Введите название",
									dataTextField: "Name",
									dataValueField: "Id",
									filter: "contains",
									dataSource: {
										serverFiltering: true,
										transport: {
											read: {
												url: "/Service/Index/",
												type: "POST",
												data: {
													CompanyName: null,
													Page: 1,
													PageSize: -1,
													Status: 0
												}
											},
										}
									},
									open: function (e) {
										let items = this.dataSource.view();
										let IsFirst = items.find(x => x.Id === -1) == undefined;

										if (IsFirst) {
											this.dataSource.add({ Name: "<- Выбрать все ->", Id: -1 });
											this.value(-1);
										}
									}
								});
							}
						},
						{
							field: "EmployeeId", label: "@Resource.LabelEmployee",
							editor: function (container, options) {
								var input = $('<input id="reportEmployeeId" name="EmployeeId"/>');
								input.appendTo(container);
								input.kendoComboBox({
									placeholder: "@Resource.PlaceholderEmployee",
									dataTextField: "FullName",
									dataValueField: "Id",
									filter: "startswith",
									dataSource: {
										serverFiltering: true,
										transport: {
											read: {
												url: "/Employee/Index/",
												type: "POST",
												data: {
													CompanyName: null,
													Page: 1,
													PageSize: -1,
													Status: 0
												}
											},
										}
									},
									open: function (e) {
										let items = this.dataSource.view();
										let IsFirst = items.find(x => x.Id === -1) == undefined;

										if (IsFirst) {
											this.dataSource.add({ FullName: "<- Выбрать все ->", Id: -1 });
											this.value(-1);
										}
									}
								});
							}
						},
						{
							field: "Date", label: "@Resource.LabelReportPeriod",
							editor: function (container, options) {
								var flexContainer = $('<div style="display: flex; font-weight: bold; justify-content: space-around; margin: 10px 0px;"/></div>');
								var input1 = $('<input id="reportDateBegin" name="DateBegin" placeholder="Начало" style="text-align: center"/>');
								var input2 = $('<input id="reportDateEnd" name="DateEnd"  placeholder="Конец" style="text-align: center"/>');
								input1.appendTo(flexContainer);
								input1.kendoDatePicker({
									format: 'MM.dd.yyyy',
									culture: "ru-RU"
								});
								input2.appendTo(flexContainer);
								input2.kendoDatePicker({
									format: 'MM.dd.yyyy',
									culture: "ru-RU"
								});
								flexContainer.appendTo(container);
							}
						},
						{
							field: "Type", label: "@Resource.LabelType",
							editor: function (container, options) {
								var input = $('<input id="reportReportType" name="Type"/>');
								input.appendTo(container);
								input.kendoDropDownList({
									dataTextField: "text",
									dataValueField: "value",
									dataSource: [
										{ text: "Excel", value: 1 },
										{ text: "Word", value: 2 },
										{ text: "PDF", value: 3 },
										{ text: "XML", value: 4 },
										{ text: "PNG", value: 5 },
									]
								})
							}
						},
					]
				}
			],
			buttonsTemplate: "<button class='btn-primary' type='submit'>@Resource.ButtonPrint</button> <button class='btn-default' id='reportCloseWindow' type='button'>@Resource.ButtonCancellation</button>"
		});

		controls.ReportForm.bind("submit", function (e) {
			e.preventDefault();
			let url = window.location.href;

			var date1 = $("#reportDateBegin").val();
			var date2 = $("#reportDateEnd").val();
			var companyId = $("#reportCompanyId").val();
			var serviceId = $("#reportServiceId").val();
			var employeeId = $("#reportEmployeeId").val();
			var type = $("#reportReportType").val();

			window.open("GetReport/?DateBegin=" + date1 + "&DateEnd=" + date2 + "&CompanyId=" + companyId + "&ServiceId=" + serviceId + "&EmployeeId=" + employeeId + "&Type=" + type);

			$("#reportWindow").data("kendoDialog").close();
		});

		// SCHEDULER
		$("#scheduler").kendoScheduler({
			culture: "ru-RU",
			dataSource: {
				sync: function () {
					this.read();
				},
				transport: {
					read: {
						url: "/ServicesHistory/Index",
						type: "POST",
						contentType: "application/json; charset=utf-8",
					},
					destroy: {
						url: "/ServicesHistory/Delete",
						type: "POST",
						contentType: "application/json; charset=utf-8",
					},
					parameterMap: function (options, type) {
						let scheduler = $("#scheduler").data("kendoScheduler");
						let timeZone = scheduler._model.formattedShortDate.split('- ').join('');
						let timeZoneArray = timeZone.split(' ');
						let dateBegin = new Date(timeZoneArray[0]).toLocaleDateString();
						let dateEnd = new Date(timeZoneArray[1]).toLocaleDateString();
						if (type == "read") {
							let json = {
								DateBegin: dateBegin,
								DateEnd: dateEnd
							};

							return kendo.stringify(json);
						}
						else if (type == "destroy") {
							return kendo.stringify({ id: options.Id });
						}
					}
				},
				batch: false,
				schema: {
					model: {
						id: "Id",
						fields: {
							start: { type: "date", from: "DateOfCreate" },
							end: { type: "date", from: "DateOfFinish" },
							Service: { from: "Service" },
							Company: { from: "Company" },
							Employee: { from: "Employee" }
						}
					}
				}
			},
			eventTemplate: $("#event-template").html(),
			startTime: new Date("2021/01/01 07:00"),
			endTime: new Date("2021/12/01 18:00"),
			showWorkHours: "none",
			majorTimeHeaderTemplate: kendo.template("<strong>#=kendo.toString(date, 'HH:mm')#</strong><sup></sup>"),
			height: "600px",
			databound: "",
			views: [
				{
					type: "workWeek",
					title: "Week",
					minorTickCount: 1,
					majorTick: 15,
					slotHeight: 10,
					dateHeaderTemplate: kendo.template("<span class='days-name'>#=kendo.toString(date, 'dd.MM.yyyy')#</span>"),
					allDaySlot: false,
					selectedDateFormat: "{0: dd.MM.yy}"
				}],
			dateHeaderTemplate: kendo.template("<u>#=kendo.toString(date, 'dd.M')#</u> - (#=percentage(date)#%)"),
			messages: {
				deleteWindowTitle: "@Resource.ButtonDelete",
				cancel: "Нет",
				destroy: "Да",
			},
			editable: {
				confirmation: "@Resource.DeleteWarningMessage",
				template: $("#schedulerEditor").html(),
				window: {
					title: "@Resource.SchedulerFormHeader",
					height: "450px",
					width: "500px",
					scrollable: false
				}
			},
			destroy: {
				template: $("#schedulerEditor").html(),
			},
			edit: function (e) {
				$("#schedulerForm").kendoForm({
					orientation: "vertical",
					visible: true,
					width: "80%",
					buttonsTemplate: "",
				});

				$("#shedulerSubmitFormInputEmployee").kendoComboBox({
					placeholder: "@Resource.LabelEmployee",
					dataTextField: "FullName",
					dataValueField: "Id",
					filter: "contains",
					dataSource: {
						serverFiltering: true,
						transport: {
							read: {
								url: "/Employee/Index/",
								type: "POST",
								data: {
									CompanyName: null,
									Page: 1,
									PageSize: -1,
									Status: 0
								}
							},
						}
					}
				});

				$("#shedulerSubmitFormInputCompany").kendoComboBox({
					placeholder: "@Resource.LabelCompany",
					dataTextField: "Name",
					dataValueField: "Id",
					filter: "contains",
					dataSource: {
						serverFiltering: true,
						transport: {
							read: {
								url: "/Company/Index/",
								type: "POST",
								data: {
									CompanyName: null,
									Page: 1,
									PageSize: -1,
									Status: 0
								}
							},
						}
					}
				});

				$("#shedulerSubmitFormInputService").kendoComboBox({
					placeholder: "@Resource.LabelService",
					dataTextField: "Name",
					dataValueField: "Id",
					filter: "contains",
					dataSource: {
						serverFiltering: true,
						transport: {
							read: {
								url: "/Service/Index/",
								type: "POST",
								data: {
									CompanyName: null,
									Page: 1,
									PageSize: -1,
									Status: 0
								},
							}

						}
					}
				});

				$("#shedulerSubmitFormInputDateOfCreate").kendoDateTimePicker({
					format: "MM.dd.yy HH:mm",
					timeFormat: "HH:mm",
					interval: 15,
					culture: "ru-RU",
				});
				// Validation
				$("#schedulerForm").validate({
					ignore: [],
					rules: {
						DateOfCreate: {
							required: true,
							dateTimeFilter: true
						},
						Employee: {
							cmbIsRequired: true
						},
						Company: {
							cmbIsRequired: true
						},
						Service: {
							cmbIsRequired: true
						}
					},
					messages: {
						DateOfCreate: {
							required: "@Resource.ValidationMessageInputRequired",
							dateTimeFilter: "@Resource.ValidationMessageDateTimeNonCorrect"
						},
						Employee: {
							cmbIsRequired: "@Resource.ValidationMessageInputRequired"
						},
						Company: {
							cmbIsRequired: "@Resource.ValidationMessageInputRequired"
						},
						Service: {
							cmbIsRequired: "@Resource.ValidationMessageInputRequired"
						}
					},
					submitHandler: function () {
						var data = {
							Id: $("#shedulerSubmitFormInputId").val(),
							DateOfCreate: $("#shedulerSubmitFormInputDateOfCreate").data("kendoDateTimePicker").value(),
							Employee: { Id: $("#shedulerSubmitFormInputEmployee").val() },
							Company: { Id: $("#shedulerSubmitFormInputCompany").val() },
							Service: { Id: $("#shedulerSubmitFormInputService").val() }
						}

						let IsEditEvent = (e.event.Id > 0);
						if (!IsEditEvent) {
							$.ajax({
								url: "/ServicesHistory/Create",
								type: "POST",
								contentType: "application/json; charset=utf-8",
								data: JSON.stringify(data),
								success: function (json) {
									if (json.IsSuccess) {
										controls.Notification.success(json.Message);

										let scheduler = $("#scheduler").data("kendoScheduler");
										scheduler.dataSource.read();
										scheduler.cancelEvent();
									}
									else {
										controls.Notification.error(json.Message);
									}
								}
							});
						}
						else {
							$.ajax({
								url: "/ServicesHistory/Update",
								type: "POST",
								contentType: "application/json; charset=utf-8",
								data: JSON.stringify(data),
								success: function (json) {
									if (json.IsSuccess) {
										controls.Notification.success(json.Message);

										let scheduler = $("#scheduler").data("kendoScheduler");
										scheduler.dataSource.read();
										scheduler.cancelEvent();
									}
									else {
										controls.Notification.error(json.Message);
									}
								}
							});
						}

					},
					focusInvalid: true,
					errorClass: "validationFormMessage",
					errorElement: 'p',
					errorPlacement: function (error, element) {
						error.insertAfter(element.closest('div'));
					}
				});

				// Fill current fields and date
				if (e.event.Id > 0) {
					$("#shedulerSubmitFormInputId").val(e.event.Id);
					$("#shedulerSubmitFormInputDateOfCreate").data("kendoDateTimePicker").value(e.event.start);
					$("#shedulerSubmitFormInputCompany").data("kendoComboBox").value(e.event.Company.Id);
					$("#shedulerSubmitFormInputService").data("kendoComboBox").value(e.event.Service.Id);
					$("#shedulerSubmitFormInputEmployee").data("kendoComboBox").value(e.event.Employee.Id);
				}
				else {
					$("#shedulerSubmitFormInputDateOfCreate").data("kendoDateTimePicker").value(e.event.start);
				}

				let buttonsContainer = e.container.find(".k-edit-buttons");
				buttonsContainer.empty();

				$("#schedulerFormSubmitButtonCancel").on("click", function () {
					$("#scheduler").data("kendoScheduler").cancelEvent();
				});
			}
		});
		controls.Scheduler = $("#scheduler").data("kendoScheduler");

		let buttonToday = $('.k-nav-today');
		buttonToday.text("@Resource.ButtonToday");
		buttonToday.prop('title', '');

		buttonToday.on("click", function () {
			controls.Scheduler.dataSource.read();
			controls.Scheduler.dataSource.read();
		});

		let buttonPrev = $('.k-nav-prev');
		buttonPrev.prop('title', '');
		buttonPrev.on("click", function () {
			controls.Scheduler.dataSource.read();
			controls.Scheduler.dataSource.read();
		});

		let buttonNext = $('.k-nav-next');
		buttonNext.prop('title', '');
		buttonNext.on("click", function () {
			controls.Scheduler.dataSource.read();
			controls.Scheduler.dataSource.read();
		});

		$(".k-event-delete").on("click", function () {
			alert("delete");
		});
	});
</script>