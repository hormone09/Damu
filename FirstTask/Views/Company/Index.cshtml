@using FirstTask.Handlers;
@using FirstTask.Resources;
@{
	ViewBag.Title = @Resource.HeadingCompanies;
}

<h2>@Resource.HeadingCompanies</h2>

<span id="companyNotifications"></span>

<div class="container">
	<div id="companiesGrid">
		<div id="companiesToolbar">
			<p>@Resource.FilterStatus</p>
			<div id="statusesListCompanies"></div>
			<p>@Resource.FilterSorting</p>
			<div id="companiesSortingTypes"></div>
			<p>@Resource.FilterName</p>
			<input type="text" name="Name" id="nameFilter" />
			<button type="button" id="btnCompanySearch">@Resource.ButtonSearch</button>
		</div>
	</div>

	<div id="companiesInsertWindow">
		<form id="companiesInsertForm"></form>

	</div>

	<div id="companyEditWindow">
		<form id="companyEditForm"></form>
	</div>

	<div>
		<div id="companiesDeleteWindow" style="text-align: center; display: none;">
			<h3 style="margin: 20px 0px;">@Resource.DeleteWarningMessage</h3>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function () {

		var notifElement = $("#companyNotifications");
		notifElement.kendoNotification({
		});

		var notification = notifElement.data("kendoNotification");

		// Insert

		$("body").on("click", "#companiesCloseInsertWindow", function () {
			$("#companiesInsertWindow").data("kendoDialog").close();
			$("#companiesInsertForm").trigger('reset');
			$(".validateContainer").empty();
		});

		$("body").on("click", "#companiesCloseEditWindow", function () {
			$("#companyEditWindow").data("kendoDialog").close();
			$("#companyEditForm").trigger('reset');
			$(".validateContainer").empty();
		});

		$("#companiesInsertWindow").kendoDialog({
			modal: true,
			closable: false,
			visible: false,
			title: false,
		});

		$("body").on("click", "#btnCompanyInsert", function () {
			let window = $("#companiesInsertWindow").data("kendoDialog")
			window.open();
		});

		var formInsert = $("#companiesInsertForm").kendoForm({
			visible: false,
			orientation: "horizontal",
			width: "100%",
			items: [
				{
					type: "group",
					label: "@Resource.CompanyInsertFormHeader",
					items: [
						{
							field: "Name", label: "@Resource.LabelName", placeholder: "@Resource.PlaceholderName",
							editor: function (container, options) {
								var input = $('<input id="insertCompaniesName" name="Name"/>');
								input.appendTo(container);
								input.kendoTextBox();
								console.log(container)
							}
						},
						{
							field: "DateOfBegin", label: "@Resource.LabelDateOfBegin",
							editor: function (container, options) {
								var input = $('<input id="insertDate" name="DateOfBegin" />');
								input.appendTo(container);
								input.kendoDatePicker({
									placeholder: "@Resource.PlaceholderDateOfBegin",
									format: 'dd/MM/yyyy'
								});
							}
						},
						{
							field: "BIN", label: "@Resource.LabelBIN",
							editor: function (container, options) {
								var input = $('<input name="BIN" />');
								input.appendTo(container);
								input.kendoMaskedTextBox({
									placeholder: "@Resource.PlaceholderBIN",
									mask: "000-000-000-000"
								});
							}
						},
						{
							field: "Phone", label: "@Resource.LabelPhone", editor: function (container, options) {
								var input = $('<input name="Phone"/>');
								input.appendTo(container);
								input.kendoMaskedTextBox({
									placeholder: "@Resource.PlaceholderPhone",
									mask: "0-(000)-000-00-00"
								});
							}
						},
						{
							field: "Validator", label: "",
							editor: function (container, options) {
								var block = $('<div class="validateContainer"/>');
								block.appendTo(container);
							}
						}
					]
				}
			],
			buttonsTemplate: "<div class='form-buttons'><button class='btn-success' type='submit'>@Resource.ButtonSave</button> <button class='btn-danger' id='companiesCloseInsertWindow' type='button'>@Resource.ButtonCancellation</button></div>"
		});

		// Insert Validator and Submit
		$("#companiesInsertForm").validate({
			rules: {
				Name: {
					required: true,
					minlength: 6,
				},
				BIN: {
					required: true,
					pattern: "^[0-9]{3}-[0-9]{3}-[0-9]{3}-[0-9]{3}$"
				},
				DateOfBegin: {
					required: true,
					dateFilter: true,
					pastDate: true
				},
				Phone: {
					required: true,
					pattern: "^[0-9]-[(]?[0-9]{3}[)]?-[0-9]{3}-[0-9]{2}-[0-9]{2}$"
				}
			},
			messages: {
				Name: {
					required: "@Resource.LabelName: @Resource.ValidationMessageInputRequired",
					minlength: "@Resource.ValidationMessageMinLenght 6",
				},
				BIN: {
					required: "@Resource.LabelBIN: @Resource.ValidationMessageInputRequired",
					pattern: "@Resource.LabelBIN: @Resource.ValidationMessageFormatError 'XXX-XXX-XXX-XXX'"
				},
				DateOfBegin: {
					required: "@Resource.LabelDateOfBegin: @Resource.ValidationMessageInputRequired",
					dateFilter: "@Resource.LabelDateOfBegin: @Resource.ValidationMessageFormatError 'ДД.ММ.ГГГГ'",
					pastDate: "@Resource.ValidationMessageDateNonCorrect"
				},
				Phone: {
					required: "@Resource.LabelPhone: @Resource.ValidationMessageInputRequired",
					pattern: "@Resource.LabelPhone: @Resource.ValidationMessageFormatError 'X-(XXX)-XXX-XX-XX'"
				}
			},
			focusInvalid: true,
			errorClass: "validationFormMessage",
			errorPlacement: function (error, element) {
				$(".validateContainer").empty();
				error.appendTo('.validateContainer');
			},
			submitHandler: function () {
				var data = formInsert.serializeArray();
				$.ajax({
					url: "/Company/AddCompany/",
					type: "POST",
					data: data,
					success: function (json) {
						if (json.IsSuccess == true) {
							var grid = $("#companiesGrid").data("kendoGrid");
							grid.dataSource.read();
							notification.success(json.Message);
							$('#companiesInsertForm')[0].reset();
							$("#companiesInsertWindow").data("kendoDialog").close();
						}
						else {
							notification.error(json.Error);
						}
					}
				});
			}
		});

		// Edit

		$("#companyEditWindow").kendoDialog({
			modal: true,
			width: "500px",
			closable: false,
			visible: false,
			title: false,
		});

		var formEdit = $("#companyEditForm").kendoForm({
			visible: true,
			orientation: "horizontal",
			width: "100%",
			items: [
				{
					type: "group",
					label: "@Resource.CompanyEditFormHeader",
					items: [

						{
					field: "Name", label: "@Resource.LabelName", placeholder: "@Resource.PlaceholderName",
					editor: function (container, options) {
						var input = $('<input id="editCompaniesName" name="Name"/>');
						input.appendTo(container);
						input.kendoTextBox();
					}
				},
				{
					field: "DateOfBegin", label: "@Resource.LabelDateOfBegin",
					editor: function (container, options) {
						var input = $('<input id="editCompaniesDateOfBegin" name="DateOfBegin" />');
						input.appendTo(container);
						input.kendoDatePicker({
							placeholder: "@Resource.PlaceholderDateOfBegin",
							format: 'dd/MM/yyyy'
						});
					}
				},
				{
					field: "BIN", label: "@Resource.LabelBIN",
					editor: function (container, options) {
						var input = $('<input id="editCompaniesBin" name="BIN" />');
						input.appendTo(container);
						input.kendoMaskedTextBox({
							placeholder: "@Resource.PlaceholderBIN",
							mask: "000-000-000-000"
						});
					}
				},
				{
					field: "Phone", label: "@Resource.LabelPhone", editor: function (container, options) {
						var input = $('<input id="editCompaniesPhone" name="Phone"/>');
						input.appendTo(container);
						input.kendoMaskedTextBox({
							placeholder: "@Resource.PlaceholderPhone",
							mask: "0-(000)-000-00-00"
						});
					}
				},
				{
					field: "Validator", label: "",
					editor: function (container, options) {
						var block = $('<div class="validateContainer"/>');
						block.appendTo(container);
					}
				}
					]
				}
			],
			buttonsTemplate: "<div class='form-buttons'><button class='btn-success' type='submit'>@Resource.ButtonSave</button> <button class='btn-danger' id='companiesCloseEditWindow' type='button' class=''>@Resource.ButtonCancellation</button></div>"
		});


		function EditCompany(oldService) {
			var filteredBIN = EditBIN(oldService.BIN);
			var filteredDate = new Date(oldService.DateOfBegin).toLocaleDateString();
			var filteredPhone = EditNumber(oldService.Phone);

			$("#companyEditForm #editCompaniesId").val(oldService.Id);
			$("#companyEditForm #editCompaniesName").val(oldService.Name);
			$("#companyEditForm #editCompaniesBin").val(filteredBIN);
			$("#companyEditForm #editCompaniesDateOfBegin").val(filteredDate);
			$("#companyEditForm #editCompaniesPhone").val(filteredPhone);

			$("#companyEditWindow").data("kendoDialog").open();

			return false;
		}

		function ActivateCompany(id) {
			$.ajax({
				url: "/Company/ActivateCompany/",
				type: "POST",
				data: { id: id },
				success: function (json) {
					if (json.IsSuccess == true) {
						var grid = $("#companiesGrid").data("kendoGrid");
						grid.dataSource.read();
						notification.success(json.Message);
					}
					else {
						notification.error(json.Message);
					}
				}
			})
		}

		// Edit Validator and Submit
		$("#companyEditForm").validate({
			rules: {
				Name: {
					required: true,
					minlength: 6,
				},
				BIN: {
					required: true,
					pattern: "^[0-9]{3}-[0-9]{3}-[0-9]{3}-[0-9]{3}$"
				},
				DateOfBegin: {
					required: true,
					dateFilter: true,
					pastDate: true
				},
				Phone: {
					required: true,
					pattern: "^[0-9]-[(]?[0-9]{3}[)]?-[0-9]{3}-[0-9]{2}-[0-9]{2}$"
				}
			},
			messages: {
				Name: {
					required: "@Resource.LabelName: @Resource.ValidationMessageInputRequired",
					minlength: "@Resource.LabelName: @Resource.ValidationMessageMinLenght 6",
				},
				BIN: {
					required: "@Resource.LabelBIN: @Resource.ValidationMessageInputRequired",
					pattern: "@Resource.LabelBIN: @Resource.ValidationMessageFormatError 'XXX-XXX-XXX-XXX'"
				},
				DateOfBegin: {
					required: "@Resource.LabelDateOfBegin: @Resource.ValidationMessageInputRequired",
					dateFilter: "@Resource.LabelDateOfBegin: @Resource.ValidationMessageFormatError 'ДД.ММ.ГГГГ'",
					pastDate: "@Resource.ValidationMessageDateNonCorrect"
				},
				Phone: {
					required: "@Resource.LabelPhone: @Resource.ValidationMessageInputRequired",
					pattern: "@Resource.LabelPhone: @Resource.ValidationMessageFormatError'X-(XXX)-XXX-XX-XX'"
				}
			},
			submitHandler: function () {
				var data = formEdit.serializeArray();

				$.ajax({
					url: "/Company/EditCompany/",
					type: "POST",
					data: data,
					success: function (json) {
						if (json.IsSuccess == true) {
							var grid = $("#companiesGrid").data("kendoGrid");
							grid.dataSource.read();
							notification.success(json.Message);
							$("#companyEditWindow").data("kendoDialog").close();
						}
						else {
							notification.error(json.Error);
						}
					}
				});
			},
			focusInvalid: true,
			errorClass: "validationFormMessage",
			errorPlacement: function (error, element) {
				$(".validateContainer").empty();
				error.appendTo('.validateContainer');
			}
		});

		// Filters

		$("body").on("click", "#btnCompanySearch", function () {
			var grid = $("#companiesGrid").data("kendoGrid");
			grid.dataSource.read();
		});

		$("#companiesToolbar").kendoToolBar({
		});

		$("#nameFilter").kendoTextBox({});

		$("#statusesListCompanies").kendoDropDownList({
			dataTextField: "text",
			dataValueField: "value",
			dataSource: [
				{ text: "@Resource.StatusActive", value: 1 },
				{ text: "@Resource.StatusDisable", value: 2 },
			]
		});

		$("#companiesSortingTypes").kendoDropDownList({
			dataTextField: "text",
			dataValueField: "value",
			dataSource: [
				{ text: "@Resource.SortingByName", value: "Name" },
				{ text: "@Resource.SortingByDateOfBegin", value: "DateOfBegin" }
			]
		});

		// Delete
		function DeleteCompany(id) {
			document.getElementById('companiesDeleteWindow').style.display = "block";
			$("#companiesDeleteWindow").kendoDialog({
				title: false,
				modal: true,
				width: "400px",
				closable: false,
				visible: true,
				actions: [
					{
						text: "Да",
						primary: true,
						action: function () {
							$.ajax({
								url: "/Company/DeleteCompany/",
								type: "POST",
								data: { id: id },
								success: function (json) {
									if (json.IsSuccess == true) {
										var grid = $("#companiesGrid").data("kendoGrid");
										grid.dataSource.read();
										notification.success(json.Message);
									}
									else {
										notification.error(json.Error);
									}
								}
							})
						}
					},
					{ text: "Нет" }
				]
			});
		};
		// Grid

		var dataSource = new kendo.data.DataSource({
			pageSize: 20,
			transport: {
				read: {
					url: "/Company/Index",
					type: "POST",
					contentType: "application/json; charset=utf-8",
				},
				parameterMap: function (options) {
					let name = $("#nameFilter").val();
					var data = {
						CompanyName: name,
						Page: options.page,
						PageSize: options.pageSize,
						Status: $("#statusesListCompanies").val(),
						SortingType: $("#companiesSortingTypes").val()
					}
					return kendo.stringify(data);
				}
			},
			schema: {
				total: function (response) {
					if (response.length > 0)
						return response[0].TotalRows;
					else
						return 1;
				},
				model: {
					fields: {
						DateOfBegin: { type: "date" }
					}
				}
			},
			serverPaging: true,
			serverSorting: true,
		});

		$("#companiesGrid").kendoGrid({
			dataSource: dataSource,
			columns: [
				{ field: "Id", title: "Id", width: "5%", hidden: true },
				{ field: "Name", title: "@Resource.LabelCompany", width: "30%" },
				{ field: "Phone", title: "@Resource.LabelPhone", width: "10%" },
				{ field: "BIN", title: "@Resource.LabelBIN", width: "10%" },
				{ field: "DateOfBegin", title: "@Resource.LabelDateOfBegin", width: "10%", format: "{0: dd-MM-yyyy}" },
				{
					field: "Status", title: "@Resource.LabelStatus", width: "5%", values: [
						{ text: "@Resource.StatusActive", value: 1 },
						{ text: "@Resource.StatusDisable", value: 2 },
					]
				},

				{
					command: [
						{
							name: "Delete",
							className: "btn-destroy",
							text: "@Resource.ButtonDelete",
							visible: function (dataItem) { return dataItem.Status == 1 },
							click: function (e) {
								var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

								DeleteCompany(dataItem.Id);
							},
						},
						{
							name: "Activate",
							className: "btn-activate",
							text: "@Resource.ButtonActivate",
							visible: function (dataItem) { return dataItem.Status == 2 },
							click: function (e) {
								var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
								ActivateCompany(dataItem.Id);
							}
						},
						{
							name: "Edit",
							className: "btn-edit",
							text: "@Resource.ButtonEdit",
							click: function (e) {
								var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
								EditCompany(dataItem);
							},
						}
					],
					width: "30%",
				},
			],
			height: 620,
			pageable: {
				messages: {
					display: '<button type="button" id="btnCompanyInsert">@Resource.ButtonAdd</button>'
				}
			},
			scrollable: true,
		});
	});
</script>
