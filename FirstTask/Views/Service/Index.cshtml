@using FirstTask.Resources;

@{
	ViewBag.Title = Resource.HeadingServices;
}

<h2>@Resource.HeadingServices</h2>

<span id="serviceNotifications"></span>

<div class="container">
	<div id="serviceGrid">
		<div id="serviceToolBar">
			<p>@Resource.FilterStatus</p>
			<div id="serviceStatusesList"></div>
			<p>@Resource.FilterSorting</p>
			<div id="serviceSortingTypes"></div>
			<p>@Resource.FilterName</p>
			<input type="text" name="FilterName" id="serviceNameFilter" />
			<button type="button" id="serviceSearchButton">@Resource.ButtonSearch</button>
		</div>
	</div>

	<div id="serviceFormDialog" class="submit-form-dialog">
		@Html.Partial("_PartialServiceForm")
	</div>

	<div id="serviceWarningWindow" class="confirmation-block">
		<h4>@Resource.DeleteWarningMessage</h4>

		<div class="button-block" >
			<button type="submit" id="serviceButtonDeleteAgree" class="btn-primary">@Resource.ButtonAgree</button>
			<button type="button" id="serviceButtonDeleteAgainst" class="btn-default">@Resource.ButtonAgainst</button>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function (){
		var controls = {};
		controls.CurrentFieldId = {};

		$("#serviceNotifications").kendoNotification({});
		controls.Notification = $("#serviceNotifications").data("kendoNotification");

		$("#serviceFormDialog").kendoDialog({
			closable: false, visible: false, title: false, width: "900"
		});
		controls.FormDialog = $("#serviceFormDialog").data("kendoDialog");

		$("#serviceWarningWindow").kendoDialog({
			closable: false, visible: false, title: "@Resource.LabelDeleteAction"
		});
		controls.DeleteDialog = $("#serviceWarningWindow").data("kendoDialog");

			$("#serviceToolBar").kendoToolBar({});

			$("#serviceStatusesList").kendoDropDownList({
				dataTextField: "text",
				dataValueField: "value",
				dataSource: [
					{ text: "@Resource.StatusActive", value: 1 },
					{ text: "@Resource.StatusDisable", value: 2 },
				]
			});
			controls.StatusesFilter = $("#serviceStatusesList").data("kendoDropDownList");

			$("#serviceSortingTypes").kendoDropDownList({
				dataTextField: "text",
				dataValueField: "value",
				dataSource: [
					{ text: "@Resource.SortingByName", value: "Name" },
					{ text: "@Resource.SortingByDateOfBegin", value: "DateOfBegin" },
					{ text: "@Resource.SortingByPriceUp", value: "Price" },
					{ text: "@Resource.SortingByPriceDown", value: "Price DESC" },
				]
			});
			controls.SortingTypeFilter = $("#serviceSortingTypes").data("kendoDropDownList");

			$("#serviceNameFilter").kendoTextBox({
				placeholder: "@Resource.PlaceholderName"
			});
			controls.NameFilter = $("#serviceNameFilter").data("kendoTextBox");

			controls.FormHeader = $("#serviceFormTitle");

	let dataSource = new kendo.data.DataSource({
		pageSize: 20,
		transport: {
			read: {
				url: "/Service/Index",
				type: "POST",
				contentType: "application/json; charset=utf-8",
			},
			parameterMap: function (options) {
				let name = $("#serviceNameFilter").val();
				var data = {
					ServiceName: name,
					Page: options.page,
					PageSize: options.pageSize,
					Status: controls.StatusesFilter.value(),
					SortingType: controls.SortingTypeFilter.value()
				}
				return kendo.stringify(data);
			}
		},
		schema: {
			total: function (response) {
				if (response.length > 0)
					return response[0].TotalRows;
				else
					return 1;
			},
			model: {
				fields: {
					DateOfBegin: { type: "date" }
				}
			}
		},
		page: "Page",
		serverPaging: true,
		serverSorting: true,
	});

		$("#serviceGrid").kendoGrid({
			dataSource: dataSource,
			columns: [
				{ field: "Id", title: "Id", width: "5%", hidden: true },
				{ field: "Name", title: "@Resource.LabelName", width: "15%" },
				{ field: "Code", title: "@Resource.LabelCode", width: "10%" },
				{ field: "Price", title: "@Resource.LabelPrice", width: "10%", format: "{0:n}"  },
				{ field: "DateOfBegin", title: "@Resource.LabelDateOfBegin", width: "10%", format: "{0: dd.MM.yyyy}" },
				{
					field: "Status", title: "@Resource.LabelStatus", width: "5%", values: [
						{ text: "@Resource.StatusActive", value: 1 },
						{ text: "@Resource.StatusDisable", value: 2 },
					]
				},
				{
					command: [
						{
							name: "Delete",
							className: "btn-destroy",
							text: "@Resource.ButtonDelete",
							visible: function (dataItem) { return dataItem.Status == 1 },
							click: function (e) {
								var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
								controls.CurrentFieldId = dataItem.Id;
								controls.DeleteDialog.open();
							},
						},
						{
							name: "Activate",
							className: "btn-activate",
							text: "@Resource.ButtonActivate",
							visible: function (dataItem) { return dataItem.Status == 2 },
							click: function (e) {
								var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

								$.ajax({
									url: "/Service/Activate/",
									type: "POST",
									data: { id: dataItem.Id },
									success: function (json) {
										if (json.IsSuccess == true) {
											controls.Grid.dataSource.read();
											controls.Notification.success(json.Message);
										}
										else {
											controls.Notification.error(json.Message);
										}
									}
								})
							}
						},
						{
							name: "Edit",
							className: "btn-edit",
							text: "@Resource.ButtonEdit",
							click: function (e) {
								var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

								$("#serviceInputId").val(dataItem.Id);
								$("#serviceInputName").data("kendoTextBox").value(dataItem.Name);
								$("#serviceInputCode").data("kendoMaskedTextBox").value(dataItem.Code);
								$("#serviceInputPrice").data("kendoNumericTextBox").value(dataItem.Price);
								$("#serviceInputDateOfBegin").data("kendoDatePicker").value(dataItem.DateOfBegin);

								controls.FormHeader.text("@Resource.ServiceEditFormHeader");
								controls.FormDialog.open();
							},
						}
					],
					width: "13%",
				},
			],
			height: 620,
			pageable: {
				messages: {
					display: '<button type="button" id="serviceInsertButton">@Resource.ButtonAdd</button>'
				}
			},
			scrollable: true,
		});
		controls.Grid = $("#serviceGrid").data("kendoGrid");

		$("body").on("click", "#serviceInsertButton", function () {
			$("#serviceInputId").val(0);
			controls.FormHeader.text("@Resource.ServiceInsertFormHeader");
			controls.FormDialog.open();
		});

		$("body").on("click", "#serviceSearchButton", function () {
			controls.Grid.dataSource.read();
		});

		$("body").on("click", "#serviceButtonDeleteAgainst", function () {
			controls.DeleteDialog.close();
		});

		$("body").on("click", "#serviceButtonDeleteAgree", function () {
			$.ajax({
				url: "/Service/Delete",
				type: "POST",
				data: { Id: controls.CurrentFieldId },
				success: function (json) {
					if (json.IsSuccess == true) {
						controls.Grid.dataSource.read();
						controls.DeleteDialog.close();
						controls.Notification.success(json.Message);
					}
					else {
						controls.Notification.error(json.Error);
					}
				}
			})
		});

		controls.Form = $("#serviceForm");
		controls.Form.kendoForm({
			orientation: "horizontal",
			visible: true,
			width: "100%",
			buttonsTemplate: "",
		});

		$("#serviceInputName").kendoTextBox({});

		$("#serviceInputCode").kendoMaskedTextBox({
			mask: "L00.000.000"
		});
		$("#serviceInputPrice").kendoNumericTextBox({
			culture: "ru-RU"
		});
		$("#serviceInputDateOfBegin").kendoDatePicker({
			format: 'dd.MM.yyyy',
			culture: "ru-RU"
		});


		controls.FormValidator = $("#serviceForm").validate({
			ignore: [],
			rules: {
				Name: {
					required: true,
					minlength: 10
				},
				Price: {
					required: true,
					maxlength: 20
				},
				DateOfBegin: {
					required: true,
					dateFilter: true,
					pastDate: true
				},
				Code: {
					required: true,
					pattern: "^[A-z]{1}[0-9]{2}.[0-9]{3}.[0-9]{3}$"
				}
			},
			messages: {
				Name: {
					required: "@Resource.ValidationMessageInputRequired",
					minlength: "@Resource.ValidationMessageMinLenght 6",
				},
				Price: {
					required: "@Resource.ValidationMessageInputRequired",
					//maxlength: "@Resource.ValidationMessageMaxLenght",
				},
				DateOfBegin: {
					required: "@Resource.ValidationMessageInputRequired",
					dateFilter: "@Resource.ValidationMessageDateNonCorrect",
					pastDate: "@Resource.ValidationMessageDateNonCorrect"
				},
				Code: {
					required: "@Resource.ValidationMessageInputRequired",
					pattern: "@Resource.ValidationMessageFormatError 'X00.000.000'"
				}
			},
			submitHandler: function (e) {
				let data = {
					Id: $("#serviceInputId").val(),
					Name: $("#serviceInputName").data("kendoTextBox").value(),
					Price: $("#serviceInputPrice").data("kendoNumericTextBox").value(),
					Code: $("#serviceInputCode").data("kendoMaskedTextBox").value(),
					DateOfBegin: $("#serviceInputDateOfBegin").data("kendoDatePicker").value()
				}

				if (data.Id == 0) {
					$.ajax({
						url: "/Service/Add",
						type: "POST",
						contentType: "application/json; charset=utf-8",
						data: JSON.stringify(data),
						success: function (json) {
							if (json.IsSuccess) {
								controls.Form[0].reset();
								controls.FormDialog.close();
								controls.Notification.success(json.Message);
								controls.Grid.dataSource.read();
							}
							else {
								controls.Notification.error(json.Message);
							}
						}
					});
				}
				else {
					$.ajax({
						url: "/Service/Edit",
						type: "POST",
						contentType: "application/json; charset=utf-8",
						data: JSON.stringify(data),
						success: function (json) {
							if (json.IsSuccess) {
								controls.Form[0].reset();
								controls.FormDialog.close();
								controls.Notification.success(json.Message);
								controls.Grid.dataSource.read();
							}
							else {
								controls.Notification.error(json.Message);
							}
						}
					});
				}
			},
			focusInvalid: true,
			errorClass: "validationFormMessage",
			errorElement: 'p',
			errorPlacement: function (error, element) {
				console.log(error, element)
				error.insertAfter(element.closest('div'));
			}
		});

		$("body").on("click", "#serviceFormButtonCancel", function (e) {
			controls.FormValidator.resetForm();
			controls.Form[0].reset();
			controls.FormDialog.close();
		});
	});
</script>
